security:
    encoders:
        App\Entity\Utilisateur:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: null }
        in_database:
            entity:
                class: App\Entity\Utilisateur
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: in_database
            form_login: 
                login_path: connexion
                check_path: connexion
                default_target_path: accueil
            logout: 
                path: deconnexion
                target: /
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    
    access_control:
          - { path: ^/appartements, roles: [ROLE_ADMIN,ROLE_CLIENT, ROLE_PROPRIETAIRE, ROLE_LOCATAIRE] }
          - { path: ^/appartement/add, roles: ROLE_ADMIN }
          - { path: ^/demandeApp, roles: [ROLE_CLIENT, ROLE_ADMIN] }
          - { path: ^/visite, roles: [ROLE_CLIENT,ROLE_ADMIN] }
          - { path: ^/demande, roles: [ROLE_ADMIN] }
          - { path: ^/connexion, roles: [ROLE_ADMIN] }
          

    role_hierarchy:
         ROLE_ADMIN: ROLE_ADMIN
         ROLE_CLIENT: ROLE_CLIENT
         ROLE_PROPRIETAIRE : ROLE_PROPRIETAIRE
         ROLE_LOCATAIRE : ROLE_LOCATAIRE 
